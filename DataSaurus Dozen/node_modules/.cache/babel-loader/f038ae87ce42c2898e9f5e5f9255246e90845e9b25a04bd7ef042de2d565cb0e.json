{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/Downloads/2021-14284-\\u110B\\u1163\\u11BC\\u1110\\u1162\\u1112\\u1167\\u11AB 2/src/components/Scatterplot.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { useStore } from './Mainplot';\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scatterplot = props => {\n  _s();\n  const scatterRef = useRef(null);\n  const selectedIndices = useStore(state => state.selectedIndices);\n  useEffect(() => {\n    const svg = d3.select(scatterRef.current);\n    svg.selectAll(\"*\").remove();\n    const axisSize = props.size - 2 * props.margin;\n    const minX = d3.min(props.data, d => d[0]);\n    const maxX = d3.max(props.data, d => d[0]);\n    const sortedData = props.data.slice().sort((a, b) => a[1] - b[1]);\n    const minY = sortedData[0][1];\n    const maxY = sortedData[sortedData.length - 1][1];\n    const xScale = d3.scaleLinear().domain([minX, maxX]).range([props.margin, props.margin + axisSize]);\n    const yScale = d3.scaleLinear().domain([minY, maxY]).range([props.margin + axisSize, props.margin]);\n\n    // Calculate the range of values for both x and y axes\n    const xRange = maxX - minX;\n    const yRange = maxY - minY;\n\n    // Determine the number of ticks based on the range and desired tick interval\n    const xTicks = Math.ceil(xRange / 10);\n    const yTicks = Math.ceil(yRange / 10);\n\n    // Create the x and y axis generators\n    const xAxis = d3.axisBottom(xScale).ticks(xTicks).tickFormat(d => d.toFixed(0));\n    const yAxis = d3.axisLeft(yScale).ticks(yTicks).tickFormat(d => d.toFixed(0));\n\n    // Append the x-axis to the SVG\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${props.size - props.margin})`).call(xAxis).selectAll(\"text\").attr(\"dy\", \"0.3em\");\n    console.log(selectedIndices);\n\n    // Append the y-axis to the SVG\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin}, 0)`).call(yAxis).selectAll(\"text\").attr(\"dx\", \"0em\");\n    svg.selectAll(\"circle\").data(props.data).enter().append(\"circle\").attr(\"cx\", d => xScale(d[0])).attr(\"cy\", d => yScale(d[1])).attr(\"r\", props.radius).attr(\"fill\", \"blue\").attr(\"class\", (d, idx) => {\n      return selectedIndices.includes(idx) ? `point-${idx} hovered` : `point-${idx}`;\n    });\n\n    // You can call this function whenever the Dino plot is brushed with the indices of the brushed points\n    // highlightPoints([2, 5, 7]); // Example usage\n  }, [props.data, props.margin, props.size, props.radius, selectedIndices]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: scatterRef,\n    width: props.size,\n    height: props.size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Scatterplot, \"5PYrlcUlBr/vG9s3HIJalLsdfUc=\", false, function () {\n  return [useStore];\n});\n_c = Scatterplot;\nexport default Scatterplot;\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useStore","d3","jsxDEV","_jsxDEV","Scatterplot","props","_s","scatterRef","selectedIndices","state","svg","select","current","selectAll","remove","axisSize","size","margin","minX","min","data","d","maxX","max","sortedData","slice","sort","a","b","minY","maxY","length","xScale","scaleLinear","domain","range","yScale","xRange","yRange","xTicks","Math","ceil","yTicks","xAxis","axisBottom","ticks","tickFormat","toFixed","yAxis","axisLeft","append","attr","call","console","log","enter","radius","idx","includes","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taehyun/Downloads/2021-14284-양태현 2/src/components/Scatterplot.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { useStore } from './Mainplot';\n\nimport * as d3 from \"d3\";\n\nconst Scatterplot = (props) => {\n  const scatterRef = useRef(null);\n  \n  const selectedIndices = useStore((state) => state.selectedIndices);\n\n  useEffect(() => {\n\t\n\t\n\t\n    const svg = d3.select(scatterRef.current);\n\tsvg.selectAll(\"*\").remove();\n\n\t\n    const axisSize = props.size - 2 * props.margin;\n\n    const minX = d3.min(props.data, d => d[0]);\n    const maxX = d3.max(props.data, d => d[0]);\n\tconst sortedData = props.data.slice().sort((a, b) => a[1] - b[1]);\n  const minY = sortedData[0][1];\n    const maxY = sortedData[sortedData.length - 1][1];\n\n    const xScale = d3.scaleLinear().domain([minX, maxX]).range([props.margin, props.margin + axisSize]);\n    const yScale = d3.scaleLinear().domain([minY, maxY]).range([props.margin + axisSize, props.margin]);\n\n    // Calculate the range of values for both x and y axes\n    const xRange = maxX - minX;\n    const yRange = maxY - minY;\n\n    // Determine the number of ticks based on the range and desired tick interval\n    const xTicks = Math.ceil(xRange / 10);\n    const yTicks = Math.ceil(yRange / 10);\n\n    // Create the x and y axis generators\n    const xAxis = d3.axisBottom(xScale).ticks(xTicks).tickFormat(d => d.toFixed(0));\n    const yAxis = d3.axisLeft(yScale).ticks(yTicks).tickFormat(d => d.toFixed(0));\n\n    // Append the x-axis to the SVG\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0, ${props.size - props.margin})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .attr(\"dy\", \"0.3em\");\n\t\n\tconsole.log(selectedIndices);\n\n    // Append the y-axis to the SVG\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${props.margin}, 0)`)\n      .call(yAxis)\n      .selectAll(\"text\")\n      .attr(\"dx\", \"0em\");\n\t  \n\n\t  svg.selectAll(\"circle\")\n   .data(props.data)\n   .enter()\n   .append(\"circle\")\n   .attr(\"cx\", d => xScale(d[0]))\n   .attr(\"cy\", d => yScale(d[1]))\n   .attr(\"r\", props.radius)\n   .attr(\"fill\", \"blue\")\n   .attr(\"class\", (d, idx) => {\n       return selectedIndices.includes(idx) ? `point-${idx} hovered` : `point-${idx}`;\n   });\n\n\n\n    // You can call this function whenever the Dino plot is brushed with the indices of the brushed points\n    // highlightPoints([2, 5, 7]); // Example usage\n\n  }, [props.data, props.margin, props.size, props.radius,selectedIndices]);\n\n  return (\n    <svg ref={scatterRef} width={props.size} height={props.size}></svg>\n  );\n};\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}